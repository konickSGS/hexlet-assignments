./gradlew test
> Task :generateEffectiveLombokConfig UP-TO-DATE
> Task :compileJava UP-TO-DATE
> Task :processResources UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :generateTestEffectiveLombokConfig UP-TO-DATE
> Task :compileTestJava UP-TO-DATE
> Task :processTestResources NO-SOURCE
> Task :testClasses UP-TO-DATE

> Task :test

AppTest > testCreateProduct() STANDARD_ERROR
    SLF4J(W): Class path contains multiple SLF4J providers.
    SLF4J(W): Found provider [org.slf4j.simple.SimpleServiceProvider@2de56eb2]
    SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@5f8e8a9d]
    SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
    SLF4J(I): Actual provider is of type [org.slf4j.simple.SimpleServiceProvider@2de56eb2]
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
    [Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hexlet user=
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
    [Test worker] INFO exercise.App - -- BEGIN
    DROP TABLE IF EXISTS products;

    CREATE TABLE products (
        id INT PRIMARY KEY AUTO_INCREMENT,
        title VARCHAR(255) NOT NULL,
        price INT NOT NULL
    );
    -- END
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/build]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: POST[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/{id}]

AppTest > testCreateProduct() PASSED

AppTest > testMainPage() STANDARD_ERROR
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
    [Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:hexlet user=
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
    [Test worker] INFO exercise.App - -- BEGIN
    DROP TABLE IF EXISTS products;

    CREATE TABLE products (
        id INT PRIMARY KEY AUTO_INCREMENT,
        title VARCHAR(255) NOT NULL,
        price INT NOT NULL
    );
    -- END
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/build]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: POST[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/{id}]

AppTest > testMainPage() PASSED

AppTest > testProductsPage() STANDARD_ERROR
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
    [Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:hexlet user=
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
    [Test worker] INFO exercise.App - -- BEGIN
    DROP TABLE IF EXISTS products;

    CREATE TABLE products (
        id INT PRIMARY KEY AUTO_INCREMENT,
        title VARCHAR(255) NOT NULL,
        price INT NOT NULL
    );
    -- END
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/build]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: POST[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/{id}]

AppTest > testProductsPage() PASSED

AppTest > testBuildProductPage() STANDARD_ERROR
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
    [Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:hexlet user=
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
    [Test worker] INFO exercise.App - -- BEGIN
    DROP TABLE IF EXISTS products;

    CREATE TABLE products (
        id INT PRIMARY KEY AUTO_INCREMENT,
        title VARCHAR(255) NOT NULL,
        price INT NOT NULL
    );
    -- END
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/build]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: POST[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/{id}]

AppTest > testBuildProductPage() PASSED

AppTest > testProductPage() STANDARD_ERROR
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
    [Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn36: url=jdbc:h2:mem:hexlet user=
    [Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
    [Test worker] INFO exercise.App - -- BEGIN
    DROP TABLE IF EXISTS products;

    CREATE TABLE products (
        id INT PRIMARY KEY AUTO_INCREMENT,
        title VARCHAR(255) NOT NULL,
        price INT NOT NULL
    );
    -- END
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/build]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: POST[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products]
    [Test worker] INFO io.javalin.Javalin - JAVALIN HANDLER REGISTRATION DEBUG LOG: GET[/products/{id}]
    [Test worker] ERROR io.javalin.Javalin - JavalinTest#test failed - full log output below:
    [Test worker] INFO io.javalin.Javalin - Starting Javalin ...
    [Test worker] INFO org.eclipse.jetty.server.Server - jetty-11.0.20; built: 2024-01-29T21:04:22.394Z; git: 922f8dc188f7011e60d0361de585fd4ac4d63064; jvm 18.0.2+9-61
    [Test worker] INFO org.eclipse.jetty.server.session.DefaultSessionIdManager - Session workerName=node0
    [Test worker] INFO org.eclipse.jetty.server.handler.ContextHandler - Started o.e.j.s.ServletContextHandler@5349b246{/,null,AVAILABLE}
    [Test worker] INFO org.eclipse.jetty.server.AbstractConnector - Started ServerConnector@78e17a99{HTTP/1.1, (http/1.1)}{0.0.0.0:45421}
    [Test worker] INFO org.eclipse.jetty.server.Server - Started Server@41dc0598{STARTING}[11.0.20,sto=0] @2402ms
    [Test worker] INFO io.javalin.Javalin - 
           __                  ___           _____
          / /___ __   ______ _/ (_)___      / ___/
     __  / / __ `/ | / / __ `/ / / __ \    / __ \
    / /_/ / /_/ /| |/ / /_/ / / / / / /   / /_/ /
    \____/\__,_/ |___/\__,_/_/_/_/ /_/    \____/

           https://javalin.io/documentation

    [Test worker] INFO io.javalin.Javalin - Javalin started in 5ms \o/
    [Test worker] INFO io.javalin.Javalin - Listening on http://localhost:45421/
    [Test worker] INFO io.javalin.Javalin - You are running Javalin 6.1.3 (released March 2, 2024).
    [JettyServerThreadPool-119] WARN io.javalin.Javalin - Uncaught exception
    org.h2.jdbc.JdbcSQLNonTransientException: This method is not allowed for a prepared statement; use a regular statement instead. [90130-220]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	at org.h2.message.DbException.get(DbException.java:223)
    	at org.h2.message.DbException.get(DbException.java:199)
    	at org.h2.message.DbException.get(DbException.java:188)
    	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:303)
    	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
    	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
    	at exercise.repository.ProductsRepository.find(ProductsRepository.java:40)
    	at exercise.controller.ProductsController.show(ProductsController.java:54)
    	at io.javalin.router.Endpoint.handle(Endpoint.kt:52)
    	at io.javalin.router.ParsedEndpoint.handle(ParsedEndpoint.kt:15)
    	at io.javalin.http.servlet.DefaultTasks.HTTP$lambda$9$lambda$7$lambda$6(DefaultTasks.kt:52)
    	at io.javalin.http.servlet.JavalinServlet.handleTask(JavalinServlet.kt:99)
    	at io.javalin.http.servlet.JavalinServlet.handleSync(JavalinServlet.kt:64)
    	at io.javalin.http.servlet.JavalinServlet.handle(JavalinServlet.kt:50)
    	at io.javalin.http.servlet.JavalinServlet.service(JavalinServlet.kt:30)
    	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:587)
    	at io.javalin.jetty.JavalinJettyServlet.service(JavalinJettyServlet.kt:52)
    	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:587)
    	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:764)
    	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:529)
    	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:221)
    	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1580)
    	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:221)
    	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1381)
    	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:176)
    	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:484)
    	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1553)
    	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:174)
    	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1303)
    	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:129)
    	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
    	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)
    	at org.eclipse.jetty.server.Server.handle(Server.java:563)
    	at org.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)
    	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)
    	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)
    	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)
    	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)
    	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)
    	at org.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)
    	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)
    	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)
    	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)
    	at java.base/java.lang.Thread.run(Thread.java:833)
    [JettyServerThreadPool-119] INFO io.javalin.Javalin - JAVALIN REQUEST DEBUG LOG:
    Request: GET [/products/1]
        Matching endpoint-handlers: java.util.stream.ReferencePipeline$3@59cb9470
        Headers: {Connection=keep-alive, User-Agent=okhttp/4.12.0, Host=127.0.0.1:45421, Accept-Encoding=gzip}
        Cookies: {}
        Body: 
        QueryString: null
        QueryParams: {}
        FormParams: {}
    Response: [500 Server Error], execution took 5.29 ms
        Headers: {Date=Sun, 31 Mar 2024 08:21:41 GMT, Content-Type=text/plain}
        Body is 12 bytes (starts on next line):
        Server Error
    ----------------------------------------------------------------------------------


AppTest > testProductPage() FAILED
    org.opentest4j.AssertionFailedError: 
    expected: 200
     but was: 500
        at java.base@18.0.2/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
        at java.base@18.0.2/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
        at app//exercise.AppTest.lambda$testProductPage$2(AppTest.java:44)
        at app//io.javalin.testtools.TestTool.test$lambda$3(TestTool.kt:36)
        at app//io.javalin.testtools.TestTool.runAndCaptureLogs(TestTool.kt:64)
        at app//io.javalin.testtools.TestTool.test(TestTool.kt:33)
        at app//io.javalin.testtools.JavalinTest.test(JavalinTest.kt:13)
        at app//io.javalin.testtools.JavalinTest.test$default(JavalinTest.kt:12)
        at app//io.javalin.testtools.JavalinTest.test(JavalinTest.kt)
        at app//exercise.AppTest.testProductPage(AppTest.java:42)

5 tests completed, 1 failed

> Task :test FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':test'.
> There were failing tests. See the report at: file:///home/gilsar/Hexlet/hexlet-assignments/java-web-ru/database/build/reports/tests/test/index.html

* Try:
> Run with --scan to get full insights.

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.3/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD FAILED in 3s
6 actionable tasks: 1 executed, 5 up-to-date
make: *** [Makefile:2: test] Error 1
